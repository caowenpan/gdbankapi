package com.mychery.mespulgin.boot.clientq058;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.3.5
 * 2020-04-17T14:21:41.159+08:00
 * Generated source version: 3.3.5
 *
 */
@WebServiceClient(name = "Q058Service",
                  wsdlLocation = "http://10.2.1.240:3100/qzj/Q058Service?wsdl",
                  targetNamespace = "http://service.testbank.mychery.com/wsdl")
public class Q058Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.testbank.mychery.com/wsdl", "Q058Service");
    public final static QName Dao = new QName("http://service.testbank.mychery.com/wsdl", "dao");
    static {
        URL url = null;
        try {
            url = new URL("http://10.2.1.240:3100/qzj/Q058Service?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Q058Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://10.2.1.240:3100/qzj/Q058Service?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Q058Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Q058Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Q058Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public Q058Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Q058Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Q058Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns Q058WebService
     */
    @WebEndpoint(name = "dao")
    public Q058WebService getDao() {
        return super.getPort(Dao, Q058WebService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Q058WebService
     */
    @WebEndpoint(name = "dao")
    public Q058WebService getDao(WebServiceFeature... features) {
        return super.getPort(Dao, Q058WebService.class, features);
    }

}
